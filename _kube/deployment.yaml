apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: demo-redis
  namespace: services
  labels:
    app: demo-redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: demo-redis
      annotations:
        ad.datadoghq.com/demo-redis.logs: '[{"source":"redis", "service":"demo-redis", "sourcecategory": "database"}]'
        ad.datadoghq.com/demo-redis.check_names: '["redisdb"]'
        ad.datadoghq.com/demo-redis.init_configs: '[{}]'
        ad.datadoghq.com/demo-redis.instances: '[{"host": "%%host%%", "port": "6379", "tags": ["redis_type:demo-redis%%"]}]'
    spec:
      imagePullSecrets:
      - name: us-west-2-ecr-registry
      containers:
      - name: demo-redis
        image: ekr.ecr.us-west-2.amazonaws.com/demo/redis-cluster:v01
        env:
        - name: MASTER
          value: "true"
        ports:
        - containerPort: 6379
        resources:
          requests:
            cpu: 500m
            memory: 3Gi
          limits:
            cpu: 1000m
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: demo-redis-config
            items:
            - key: redis-config
              path: redis.conf

